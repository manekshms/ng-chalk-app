{"version":3,"file":"ng-chalk.js","sources":["ng://ng-chalk/lib/template/danger-template.ts","ng://ng-chalk/lib/template/warning-template.ts","ng://ng-chalk/lib/template/info-template.ts","ng://ng-chalk/lib/template/success-template.ts","ng://ng-chalk/lib/ng-chalk-service-config.ts","ng://ng-chalk/lib/ng-chalk.service.ts","ng://ng-chalk/lib/ng-chalk.component.ts","ng://ng-chalk/lib/ng-chalk.module.ts","ng://ng-chalk/lib/ng-chalk-config.ts","ng://ng-chalk/lib/template/ng-chalk-template.ts","ng://ng-chalk/lib/template/ng-chalk-template-config.ts"],"sourcesContent":["import { NgChalkTemplate } from './ng-chalk-template';\n\nexport class DangerTemplate implements NgChalkTemplate{\n    color:String = \"#cf0a11\"\n    bg:String = \"#fdd9d9\";\n}","import { NgChalkTemplate } from './ng-chalk-template';\n\nexport class WarningTemplate implements NgChalkTemplate {\n    color:String = \"#7f7a05\"\n    bg:String = \"#fffdd9\";\n}","import { NgChalkTemplate } from './ng-chalk-template';\n\nexport class InfoTemplate implements NgChalkTemplate{\n    color:String = \"#094182\"\n    bg:String = \"#d9f5ff\";\n}","import { NgChalkTemplate } from './ng-chalk-template';\n\nexport class SuccessTemplate implements NgChalkTemplate {\n    color:String = \"#369628\"\n    bg:String = \"#e0ffd8\";\n}","import { Injectable } from '@angular/core';\nimport { NgChalkTemplateConfig } from './template/ng-chalk-template-config';\nimport { NgChalkConfig } from './ng-chalk-config';\nimport { DangerTemplate } from './template/danger-template';\nimport { WarningTemplate } from './template/warning-template';\nimport { InfoTemplate } from './template/info-template';\nimport { SuccessTemplate } from './template/success-template';\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class NgChalkServiceConfig implements NgChalkConfig{\n    defaultPadding = '2px';\n    templates:NgChalkTemplateConfig[] = [\n        {name: 'danger', template: new DangerTemplate},\n        {name: 'warning', template: new WarningTemplate},\n        {name: 'info', template: new InfoTemplate},\n        {name: 'success', template: new SuccessTemplate},\n    ]\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { NgChalkServiceConfig } from './ng-chalk-service-config';\nimport { NgChalkTemplateConfig } from './template/ng-chalk-template-config';\nimport { NgChalkTemplate } from './template/ng-chalk-template';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgChalkService {\n\n    constructor(private config:NgChalkServiceConfig) {\n    }\n\n    public getConfig():NgChalkServiceConfig {\n        return this.config;\n    }\n\n    public setConfig(config:NgChalkServiceConfig) {\n        this.config = config;\n    }\n\n    public getTemplateByName(name):NgChalkTemplate {\n        const ngChalkTemplateConfig:NgChalkTemplateConfig = this.config.templates.find( template => template.name == name );\n        return ngChalkTemplateConfig? ngChalkTemplateConfig.template : null;\n    }\n\n    public getDefaultPadding():String {\n        return this.config.defaultPadding;\n    }\n\n}","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { NgChalkTemplate } from './template/ng-chalk-template';\nimport { NgChalkService } from './ng-chalk.service';\n\n@Component({\n  selector: 'ng-chalk',\n  templateUrl: './ng-chalk.component.html',\n  styleUrls: ['./ng-chalk.component.scss']\n})\nexport class NgChalkComponent implements OnInit {\n\n  @Input('color') color;\n  @Input('borderVal') border;\n  @Input('borderRadius') borderRadius;\n  @Input('bg') bg;\n  @Input(\"template\") templateName:String;\n  @Input(\"padding\") padding:String;\n  @ViewChild(\"container\", null) container: ElementRef;\n\n  private template:NgChalkTemplate;\n\n  constructor(private ngChalkService:NgChalkService) {\n  }\n\n  private initialize () {\n    this.template = this.ngChalkService.getTemplateByName(this.templateName);\n    this.color = this.color || (this.template && this.template.color? this.template.color : \"\");\n    this.bg = this.bg || (this.template && this.template.bg ? this.template.bg : \"\");\n    this.border = this.border || (this.template && this.template.borderVal ? this.template.borderVal : \"\");\n    this.borderRadius = this.borderRadius || (this.template && this.template.borderRadius ? this.template.borderRadius : \"\");\n    this.padding = this.padding || (this.template && this.template.padding ? this.template.padding : \"\");\n  }\n\n  ngOnInit() {\n    this.initialize();\n    this.container.nativeElement.style.color = this.color;\n    this.container.nativeElement.style.border = this.border;\n    this.container.nativeElement.style.borderRadius = this.borderRadius;\n    this.container.nativeElement.style.background = this.bg;\n    this.container.nativeElement.style.padding = this.padding || this.ngChalkService.getDefaultPadding();\n  }\n\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgChalkComponent } from './ng-chalk.component';\nimport { NgChalkServiceConfig } from './ng-chalk-service-config';\nimport { NgChalkConfig } from './ng-chalk-config';\n\n@NgModule({\n  declarations: [NgChalkComponent],\n  imports: [CommonModule],\n  exports: [NgChalkComponent],\n  providers: [NgChalkServiceConfig]\n})\nexport class NgChalkModule { \n\n  static forRoot(config:NgChalkConfig):ModuleWithProviders {\n    return {\n      ngModule: NgChalkModule,\n      providers: [\n        {\n          provide: NG_CHALK_SERVICE_CONFIG,\n          useValue: config\n        },\n        {\n          provide: NgChalkServiceConfig,\n          useFactory: createNgChalkServiceConfig,\n          deps: [NG_CHALK_SERVICE_CONFIG]\n        }\n      ]\n    }\n  }\n\n }\n\nexport const NG_CHALK_SERVICE_CONFIG = new InjectionToken<NgChalkConfig>('config')\n\nexport function createNgChalkServiceConfig(config?:NgChalkConfig): NgChalkServiceConfig {\n  var ngChalkServiceConfig = new NgChalkServiceConfig();\n\n  if(config){\n    ngChalkServiceConfig.defaultPadding = config.defaultPadding || ngChalkServiceConfig.defaultPadding;\n    ngChalkServiceConfig.templates = [...ngChalkServiceConfig.templates,  ...(config.templates || ngChalkServiceConfig.templates)];\n  }\n  return ngChalkServiceConfig;\n}","import { NgChalkTemplateConfig } from './template/ng-chalk-template-config';\n\nexport interface NgChalkConfig {\n    defaultPadding?:any;\n    templates?:NgChalkTemplateConfig[]\n}","export interface NgChalkTemplate {\n    color?:String | \"crimson\";\n    bg?:String | \"cornsilk\";\n    padding?:String;\n    borderVal?:String;\n    borderRadius?:String;\n}","import { NgChalkTemplate } from './ng-chalk-template';\n\nexport interface NgChalkTemplateConfig {\n    name: String,\n    template: NgChalkTemplate\n}"],"names":[],"mappings":"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"}